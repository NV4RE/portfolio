{"version":3,"sources":["context/resume.tsx","components/Body/index.tsx","components/Container/index.tsx","components/Button/index.tsx","components/Icon/index.tsx","components/Navigator/index.tsx","components/Typography/index.tsx","containers/AboutMe/index.tsx","components/ContactLink/index.tsx","containers/Contact/index.tsx","components/Experience/index.tsx","containers/Experiences/index.tsx","components/Tag/index.tsx","containers/Profile/index.tsx","containers/Summary/index.tsx","router.tsx","serviceWorker.ts","index.tsx"],"names":["resumeContext","createContext","undefined","ResumeProvider","props","useState","resume","setResume","useEffect","a","urlParams","URLSearchParams","window","location","search","axios","get","process","res","data","console","log","response","toast","Provider","value","children","StyledBody","styled","div","Body","loading","size","color","ICON_NAME","Icon","name","Mail","Github","Gitlab","Linkedin","Medium","Instagram","Home","Profile","AboutMe","Back","Summary","Experiences","Contact","Between","Navigator","history","useHistory","pn","pathname","split","currentPage","length","currentIndex","pages","indexOf","prevPage","nextPage","Button","className","onClick","push","Title","p","Paragraph","Big","span","Small","Content","resumeData","useContext","Container","about_me","map","line","index","IconContainer","Label","getDomainFromUrl","url","test","URL","hostname","ContactLink","open","link","label","contacts","c","Avartar","img","formatDate","d","fns","Experience","src","logo","job_title","company_name","from","to","description","experiences","exp","ProfilePicture","profile","profile_img","f_name","l_name","Tag","jd","Input","input","skills","filtered","setFiltered","setSearch","filter","stack","toLowerCase","includes","alias","placeholder","onChange","e","target","s","Router","useLocation","setTimeout","scrollTo","exact","path","component","Boolean","match","ReactDOM","render","StrictMode","position","autoClose","hideProgressBar","pauseOnHover","style","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.edd4fee7.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Resume } from \"../types/resume\";\n\nexport const resumeContext = createContext<Resume | undefined>(undefined);\n\ninterface IProps {\n  children: React.ReactNode;\n}\n\nconst ResumeProvider = (props: IProps) => {\n  const [resume, setResume] = useState<Resume | undefined>(undefined);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const urlParams = new URLSearchParams(window.location.search);\n        const res = await axios.get(\n          `${process.env[\"REACT_APP_BACKEND_URL\"]}/resume.json?k=${\n            urlParams.get(\"k\") || \"\"\n          }`\n        );\n        setResume(res.data);\n      } catch (error) {\n        console.log(error.response);\n        if (error.response?.data) {\n          toast(`Cannot fetch data: ${error.response?.data}`);\n        } else {\n          toast(`Ohhh, think my backend are down :(`);\n        }\n      }\n    })();\n  }, []);\n\n  return (\n    <resumeContext.Provider value={resume}>\n      {props.children}\n    </resumeContext.Provider>\n  );\n};\n\nexport default ResumeProvider;\n","import React from \"react\";\nimport PuffLoader from \"react-spinners/PuffLoader\";\nimport styled from \"styled-components\";\n\nconst StyledBody = styled.div`\n  display: flex;\n\n  flex-flow: column nowrap;\n  align-items: center;\n\n  min-width: 210px;\n  max-width: 1024px;\n\n  background-color: #e8e8e8;\n  border-radius: 8px;\n  box-shadow: 3px 10px 27px -8px rgba(0, 0, 0, 0.9);\n  padding: 40px;\n  margin: 0 80px;\n\n  @media (max-width: 768px) {\n    box-sizing: border-box;\n    width: 100%;\n    margin: 32px 15px;\n  }\n`;\n\ninterface IProps {\n  loading?: boolean;\n  children: React.ReactNode;\n}\n\nconst Body = (props: IProps) => {\n  return (\n    <StyledBody>\n      {props.loading ? (\n        <PuffLoader size={120} color=\"#456268\" />\n      ) : (\n        <>{props.children}</>\n      )}\n    </StyledBody>\n  );\n};\n\nexport default Body;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  display: flex;\n  width: 100vw;\n  min-height: 100vh;\n  justify-content: center;\n  align-items: center;\n  margin: 20px 0;\n`;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  color: #f6f6f6;\n  cursor: pointer;\n\n  font-family: \"Nurom-Bold\";\n\n  margin: 20px 0 0 0;\n  padding: 7px;\n  border-radius: 3px;\n  background-color: #1b262c;\n  box-shadow: 3px 4px 10px -3px rgba(0, 0, 0, 0.9);\n`;\n","import React from \"react\";\nimport {\n  FiGithub,\n  FiGitlab,\n  FiInstagram,\n  FiLink,\n  FiLinkedin,\n  FiMail,\n} from \"react-icons/fi\";\nimport {\n  RiArrowGoBackFill,\n  RiContactsBookFill,\n  RiContactsFill,\n  RiHomeFill,\n  RiMediumFill,\n  RiMistLine,\n  RiNewspaperFill,\n  RiUser3Fill,\n} from \"react-icons/ri\";\n\nexport enum ICON_NAME {\n  Mail = \"mail\",\n  Github = \"github.com\",\n  Gitlab = \"gitlab.com\",\n  Linkedin = \"linkedin.com\",\n  Medium = \"medium.com\",\n  Instagram = \"instagram.com\",\n\n  Home = \"home\",\n  Back = \"back\",\n  Profile = \"profile\",\n  AboutMe = \"aboutme\",\n  Summary = \"summary\",\n  Experiences = \"experiences\",\n  Contact = \"contact\",\n}\n\ninterface IProps {\n  name: ICON_NAME | string;\n}\n\nconst Icon = (props: IProps) => {\n  switch (props.name) {\n    case ICON_NAME.Mail:\n      return <FiMail />;\n    case ICON_NAME.Github:\n      return <FiGithub />;\n    case ICON_NAME.Gitlab:\n      return <FiGitlab />;\n    case ICON_NAME.Linkedin:\n      return <FiLinkedin />;\n    case ICON_NAME.Medium:\n      return <RiMediumFill />;\n    case ICON_NAME.Instagram:\n      return <FiInstagram />;\n\n    case ICON_NAME.Home:\n      return <RiHomeFill />;\n    case ICON_NAME.Profile:\n      return <RiUser3Fill />;\n    case ICON_NAME.AboutMe:\n      return <RiContactsFill />;\n    case ICON_NAME.Back:\n      return <RiArrowGoBackFill />;\n    case ICON_NAME.Summary:\n      return <RiMistLine />;\n    case ICON_NAME.Experiences:\n      return <RiNewspaperFill />;\n    case ICON_NAME.Contact:\n      return <RiContactsBookFill />;\n\n    default:\n      return <FiLink />;\n  }\n};\n\nexport default Icon;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Button from \"../Button\";\nimport Icon from \"../Icon\";\n\nconst Between = styled.div`\n  display: flex;\n  flex: 1 0 100%;\n  width: 100%;\n  justify-content: space-between;\n`;\n\ninterface IProps {\n  pages: string[];\n}\n\nconst Navigator = (props: IProps) => {\n  const history = useHistory();\n  const pn = history.location.pathname.split(\"/\");\n  const currentPage = pn[pn.length - 1];\n\n  const currentIndex = props.pages.indexOf(currentPage);\n\n  const prevPage = props.pages[(currentIndex - 1) % props.pages.length] || \"/\";\n  const nextPage = props.pages[(currentIndex + 1) % props.pages.length] || \"/\";\n\n  return (\n    <Between>\n      <Button\n        className=\"hvr-backward\"\n        onClick={() =>\n          history.push({\n            pathname: prevPage,\n            search: window.location.search,\n          })\n        }\n      >\n        <Icon name={prevPage} />\n      </Button>\n      <Button\n        className=\"hvr-forward\"\n        onClick={() =>\n          history.push({\n            pathname: nextPage,\n            search: window.location.search,\n          })\n        }\n      >\n        <Icon name={nextPage} />\n      </Button>\n    </Between>\n  );\n};\n\nexport default Navigator;\n","import styled from \"styled-components\";\n\nexport const Title = styled.p`\n  font-family: \"Nurom-Bold\";\n  padding: 2px 0 4px 0;\n  margin: 0;\n  font-size: 2.2rem;\n  white-space: nowrap;\n`;\n\nexport const Paragraph = styled.p`\n  padding: 18px 0 4px 0;\n  margin: 0;\n  font-size: 1rem;\n  font-weight: 800;\n  word-wrap: break-word;\n`;\n\nexport const Big = styled.span`\n  font-family: \"Nurom-Bold\";\n  font-size: 1.2em;\n`;\n\nexport const Small = styled.span`\n  font-size: 0.8em;\n  font-weight: 200;\n`;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport Body from \"../../components/Body\";\nimport Container from \"../../components/Container\";\nimport Navigator from \"../../components/Navigator\";\nimport { Big, Paragraph, Title } from \"../../components/Typography\";\nimport { resumeContext } from \"../../context/resume\";\n\nconst Content = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: flex-start;\n`;\n\nconst AboutMe = () => {\n  const resumeData = useContext(resumeContext);\n\n  return (\n    <Container>\n      <Body loading={!resumeData}>\n        <Title>About me</Title>\n        <Content>\n          {resumeData?.about_me.map((line, index) => {\n            return (\n              <Paragraph key={index}>\n                {index === 0 ? <Big>Hi, </Big> : \"\"}\n                {line}\n              </Paragraph>\n            );\n          })}\n        </Content>\n        <Navigator pages={resumeData?.pages ?? []} />\n      </Body>\n    </Container>\n  );\n};\n\nexport default AboutMe;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"../Icon\";\n\ninterface IProps {\n  link: string;\n  label: string;\n}\n\nconst IconContainer = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  color: #f6f6f6;\n  cursor: pointer;\n\n  box-sizing: border-box;\n  width: 100%;\n\n  padding: 10px;\n  margin: 6px 0;\n  border-radius: 8px;\n  background-color: #1b262c;\n  box-shadow: 3px 4px 10px -3px rgba(0, 0, 0, 0.9);\n`;\n\nconst Label = styled.p`\n  padding: 0 0 0 7px;\n  margin: 0;\n  text-decoration: none;\n  text-align: center;\n  font-weight: 800;\n`;\n\nconst ContactLink = (props: IProps) => {\n  return (\n    <IconContainer\n      className=\"hvr-float\"\n      onClick={() => window.open(props.link, \"_blank\", \"noopener noreferrer\")}\n    >\n      <Icon name={getDomainFromUrl(props.link)} /> <Label>{props.label}</Label>\n    </IconContainer>\n  );\n};\n\nconst getDomainFromUrl = (url: string): string => {\n  if (/mailto:/gi.test(url)) {\n    return \"mail\";\n  }\n  return new URL(url).hostname;\n};\n\nexport default ContactLink;\n","import React, { useContext } from \"react\";\nimport Body from \"../../components/Body\";\nimport ContactLink from \"../../components/ContactLink\";\nimport Container from \"../../components/Container\";\nimport Navigator from \"../../components/Navigator\";\nimport { resumeContext } from \"../../context/resume\";\n\nconst Contact = () => {\n  const resumeData = useContext(resumeContext);\n  return (\n    <Container>\n      <Body loading={!resumeData}>\n        {resumeData?.contacts.map((c) => {\n          return <ContactLink key={c.link} link={c.link} label={c.label} />;\n        })}\n        <Navigator pages={resumeData?.pages ?? []} />\n      </Body>\n    </Container>\n  );\n};\n\nexport default Contact;\n","import * as fns from \"date-fns\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Experience as IExperience } from \"../../types/resume\";\nimport { Big, Paragraph, Small } from \"../Typography\";\n\ninterface IProps extends IExperience {}\n\nconst IconContainer = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  color: #f6f6f6;\n\n  box-sizing: border-box;\n  width: 100%;\n\n  padding: 23px;\n  margin: 6px 0;\n  border-radius: 8px;\n  background-color: #1b262c;\n  box-shadow: 3px 4px 10px -3px rgba(0, 0, 0, 0.9);\n\n  @media (max-width: 768px) {\n    flex-flow: column nowrap;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst Avartar = styled.img`\n  border-radius: 5px;\n  height: 45px;\n  margin: 0 0 15px 0;\n  background-color: #fff;\n  border: solid #fff 10px;\n\n  @media (max-width: 768px) {\n    height: 80px;\n    border-width: 20px;\n  }\n`;\n\nconst Body = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  margin: 12px;\n`;\n\nconst Experience = (props: IProps) => {\n  return (\n    <IconContainer>\n      <Avartar src={props.logo} />\n      <Body>\n        <Big>{props.job_title}</Big>\n        <Paragraph>\n          {props.company_name}{\" \"}\n          <Small>\n            {formatDate(props.from)} — {formatDate(props.to)}\n          </Small>\n        </Paragraph>\n\n        {props.description}\n      </Body>\n    </IconContainer>\n  );\n};\n\nconst formatDate = (d: any): string => {\n  if (!d) {\n    return \"now\";\n  }\n  return fns.format(d, \"MMM/yyyy\");\n};\n\nexport default Experience;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport Body from \"../../components/Body\";\nimport Container from \"../../components/Container\";\nimport Experience from \"../../components/Experience\";\nimport Navigator from \"../../components/Navigator\";\nimport { Title } from \"../../components/Typography\";\nimport { resumeContext } from \"../../context/resume\";\n\nconst Content = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: flex-start;\n`;\nconst Experiences = () => {\n  const resumeData = useContext(resumeContext);\n\n  return (\n    <Container>\n      <Body loading={!resumeData}>\n        <Title>Experiences</Title>\n        <Content>\n          {resumeData?.experiences.map((exp, index) => {\n            return <Experience key={index} {...exp} />;\n          })}\n        </Content>\n        <Navigator pages={resumeData?.pages ?? []} />\n      </Body>\n    </Container>\n  );\n};\n\nexport default Experiences;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: center;\n  align-items: center;\n  flex: 1 0;\n\n  font-weight: 800;\n  color: #f4f4f2;\n  white-space: nowrap;\n\n  margin: 3px;\n  padding: 5px;\n  border-radius: 3px;\n  background-color: #1c2b2d;\n`;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Body from \"../../components/Body\";\nimport Button from \"../../components/Button\";\nimport Container from \"../../components/Container\";\nimport Tag from \"../../components/Tag\";\nimport { Big } from \"../../components/Typography\";\nimport { resumeContext } from \"../../context/resume\";\n\nconst ProfilePicture = styled.img`\n  border-radius: 50%;\n  height: 8rem;\n  margin: 0 0 15px 0;\n`;\n\nconst Profile = () => {\n  const history = useHistory();\n  const resumeData = useContext(resumeContext);\n\n  return (\n    <Container>\n      <Body loading={!resumeData}>\n        <ProfilePicture src={resumeData?.profile.profile_img} />\n\n        <Big>\n          {resumeData?.profile.f_name} {resumeData?.profile.l_name}\n        </Big>\n        <Tag>{resumeData?.profile.jd}</Tag>\n\n        <Button\n          className=\"hvr-grow\"\n          onClick={() =>\n            history.push({\n              pathname: \"/aboutme\",\n              search: window.location.search,\n            })\n          }\n        >\n          Know me better ?\n        </Button>\n      </Body>\n    </Container>\n  );\n};\n\nexport default Profile;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Body from \"../../components/Body\";\nimport Container from \"../../components/Container\";\nimport Navigator from \"../../components/Navigator\";\nimport Tag from \"../../components/Tag\";\nimport { resumeContext } from \"../../context/resume\";\n\nconst Input = styled.input`\n  box-sizing: border-box;\n  height: 28px;\n  width: 220px;\n  margin: 2px 2px;\n  padding: 0 8px;\n  text-align: center;\n  font-weight: 800;\n\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 1rem;\n  background-color: inherit;\n  -webkit-appearance: none;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n`;\n\nconst Summary = () => {\n  const resumeData = useContext(resumeContext);\n  const [filtered, setFiltered] = useState(resumeData?.skills ?? []);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    setFiltered(\n      (resumeData?.skills ?? []).filter((stack) => {\n        return (\n          stack.name.toLowerCase().includes(search) ||\n          stack.alias.filter((a) => a.toLowerCase().includes(search)).length\n        );\n      })\n    );\n  }, [search, resumeData]);\n\n  return (\n    <Container>\n      <Body loading={!resumeData}>\n        <Content>\n          <Input\n            placeholder=\"Enter some keyword\"\n            onChange={(e) => setSearch(e.target.value.toLowerCase())}\n          />\n          {filtered.map((s) => (\n            <Tag key={s.name}>{s.name}</Tag>\n          ))}\n        </Content>\n        <Navigator pages={resumeData?.pages ?? []} />\n      </Body>\n    </Container>\n  );\n};\n\nexport default Summary;\n","import \"hover.css/css/hover-min.css\";\nimport React, { useEffect } from \"react\";\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport AboutMe from \"./containers/AboutMe\";\nimport Contact from \"./containers/Contact\";\nimport Experiences from \"./containers/Experiences\";\nimport Profile from \"./containers/Profile\";\nimport Summary from \"./containers/Summary\";\n\nconst Container = styled.div`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  width: 100vw;\n  height: 100vh;\n  overflow-x: hidden;\n  background: linear-gradient(35deg, #000000, #16222a, #102245);\n  background-size: 300vw;\n  animation: gradient 50s ease infinite;\n\n  @keyframes gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n`;\n\nconst Router = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    setTimeout(() => window.scrollTo(0, 0), 1000);\n  }, [location.pathname]);\n\n  return (\n    <Container>\n      <Switch location={location}>\n        <Route exact path=\"/profile\" component={Profile} />\n        <Route exact path=\"/aboutMe\" component={AboutMe} />\n        <Route exact path=\"/summary\" component={Summary} />\n        <Route exact path=\"/experiences\" component={Experiences} />\n        <Route exact path=\"/contact\" component={Contact} />\n        <Route path=\"/\">\n          <Redirect to={`/profile${window.location.search}`} />\n        </Route>\n      </Switch>\n    </Container>\n  );\n};\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ResumeProvider from \"./context/resume\";\nimport Router from \"./router\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ResumeProvider>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={true}\n          pauseOnHover\n          style={{ color: \"#1b262c\" }}\n        />\n        <Router />\n      </ResumeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}